[{"C:\\Users\\musab\\my-list\\src\\index.js":"1","C:\\Users\\musab\\my-list\\src\\AllContext.js":"2","C:\\Users\\musab\\my-list\\src\\App.js":"3","C:\\Users\\musab\\my-list\\src\\item.js":"4","C:\\Users\\musab\\my-list\\src\\modal.js":"5","C:\\Users\\musab\\my-list\\src\\menu.js":"6","C:\\Users\\musab\\my-list\\src\\tabs.js":"7","C:\\Users\\musab\\my-list\\src\\header.js":"8","C:\\Users\\musab\\my-list\\src\\form.js":"9","C:\\Users\\musab\\my-list\\src\\listHeader.js":"10"},{"size":278,"mtime":1607512691987,"results":"11","hashOfConfig":"12"},{"size":4601,"mtime":1611617044315,"results":"13","hashOfConfig":"12"},{"size":314,"mtime":1615577516844,"results":"14","hashOfConfig":"12"},{"size":908,"mtime":1607899321189,"results":"15","hashOfConfig":"12"},{"size":1009,"mtime":1607877040688,"results":"16","hashOfConfig":"12"},{"size":2649,"mtime":1615580071543,"results":"17","hashOfConfig":"12"},{"size":651,"mtime":1615586787049,"results":"18","hashOfConfig":"12"},{"size":648,"mtime":1615576910813,"results":"19","hashOfConfig":"12"},{"size":1013,"mtime":1615579744054,"results":"20","hashOfConfig":"12"},{"size":499,"mtime":1615579739979,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cgfwal",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\musab\\my-list\\src\\index.js",[],["44","45"],"C:\\Users\\musab\\my-list\\src\\AllContext.js",["46"],"import React, {useState, useEffect} from \"react\"\r\nimport Item from \"./item\"\r\n\r\nconst AllContext = React.createContext()\r\n\r\nfunction AllContextProvider(props) {\r\n  const listArray = JSON.parse(localStorage.getItem('listArray'))\r\n  const data = listArray && JSON.parse(localStorage.getItem(listArray[listArray.length - 1]))\r\n  const [activeTab, setActiveTab] = useState(null)\r\n  const [itemsData, setItemsData] = useState(data ? data : [])\r\n  const [newInput, setNewInput] = useState(\"\")\r\n  const [edit, setEdit] = useState(\"\")\r\n  const [editItem, setEditItem] = useState(\"\")\r\n  const [menuHide, setMenuHide] = useState(true)\r\n  const [modalHide, setModalHide] = useState(true)\r\n  const [listName, setListName] = useState(\"\")\r\n  const [list, setList] = useState(listArray ? listArray : [])\r\n  const [loadedList, setLoadedList] = useState(listArray ? listArray[listArray.length - 1] : \"My List\")\r\n\r\n  const toggleModal = () => setModalHide((prev) => !prev )\r\n  const toggleMenu = () => {\r\n    setMenuHide(prev => !prev )\r\n  }\r\n  \r\n  const nameList = () => {\r\n    setListName(prompt('Please give a name to your list.', `List-${list.length + 1}`))\r\n  }\r\n\r\n  function editDataProperty(property, trgt) {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === trgt) {\r\n        return {\r\n          ...elm,\r\n          [property]: !elm.[property]\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function LoadList() {\r\n    return (\r\n      activeTab === null ? \r\n      <div className='list'>\r\n        {itemsData && itemsData.map(item => \r\n          <Item\r\n            key={item.id}\r\n            item={item}\r\n          />)\r\n        }\r\n      </div> :\r\n      <div className='list'>\r\n        {\r\n          itemsData && itemsData.filter(elm => elm.completed === activeTab).map(item => \r\n          <Item\r\n            key={item.id}\r\n            item={item}\r\n          />)\r\n        }\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  function renameList(value) {\r\n    const newName = prompt('Rename your list.', value)\r\n    if (list.includes(newName)) {\r\n      window.alert(\"This list-name already exists.\")\r\n    } else if (newName !== null) {\r\n      setItemsData(JSON.parse(localStorage.getItem(value)))\r\n      setListName(newName)\r\n      loadedList === value && setLoadedList(newName)\r\n      deleteList(value)\r\n    }\r\n  }\r\n\r\n  function deleteList(value) {\r\n    localStorage.removeItem(value)\r\n    setList(prev => prev.filter(elm => elm !== value ))\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }\r\n  function saveList(x, e) { \r\n    if (x !== \"\" && !list.includes(x)) {\r\n      setList(prev => [...prev, x])\r\n      setListName(\"\")\r\n      setLoadedList(x)\r\n    } else {\r\n      window.alert(\"This list-name already exists.\")\r\n    }\r\n  }\r\n\r\n  function saveEdit() {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === editItem) {\r\n        return {\r\n          ...elm,\r\n          name: edit\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function handler(type) {\r\n    return function(e){\r\n      const trgt = e.currentTarget.id\r\n      if (type === \"edit\") {\r\n        toggleModal()\r\n        setEdit(e.currentTarget.name)\r\n        setEditItem(trgt)\r\n      } else if (type === \"check\" || type === \"label\") {\r\n          editDataProperty('completed', trgt)\r\n      } else if (type === \"delete\") {\r\n          setItemsData(itemsData.filter(item => item.id !== trgt))\r\n      }\r\n    }\r\n  }\r\n\r\n  function addItem(e){\r\n    e.preventDefault()\r\n    setItemsData(prev => prev && [...prev,\r\n      {\r\n      id: newInput + itemsData.length,\r\n      name: newInput,\r\n      completed: false,\r\n      editable: false,\r\n      }]\r\n    )\r\n    setNewInput(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (listName) {\r\n      saveList(listName)\r\n      localStorage.setItem(listName, JSON.stringify(itemsData))\r\n    }\r\n  }, [listName])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }, [list])\r\n\r\n  const value = {\r\n    toggleModal,\r\n    editDataProperty,\r\n    LoadList,\r\n    saveList,\r\n    saveEdit,\r\n    setItemsData,\r\n    addItem,\r\n    nameList,\r\n    setEdit,\r\n    edit,\r\n    menuHide,\r\n    toggleMenu,\r\n    newInput,\r\n    setNewInput,\r\n    itemsData,\r\n    list,\r\n    setList,\r\n    setEditItem,\r\n    modalHide,\r\n    setModalHide,\r\n    listName,\r\n    deleteList,\r\n    loadedList,\r\n    setLoadedList,\r\n    renameList,\r\n    handler,\r\n    setActiveTab,\r\n    activeTab\r\n  }\r\n\r\n  return (\r\n    <AllContext.Provider value={value}>\r\n      {props.children}\r\n    </AllContext.Provider>\r\n  )\r\n}\r\n\r\nexport {AllContext, AllContextProvider}","C:\\Users\\musab\\my-list\\src\\App.js",[],"C:\\Users\\musab\\my-list\\src\\item.js",[],"C:\\Users\\musab\\my-list\\src\\modal.js",[],"C:\\Users\\musab\\my-list\\src\\menu.js",[],"C:\\Users\\musab\\my-list\\src\\tabs.js",[],"C:\\Users\\musab\\my-list\\src\\header.js",[],"C:\\Users\\musab\\my-list\\src\\form.js",[],"C:\\Users\\musab\\my-list\\src\\listHeader.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":137,"column":6,"nodeType":"53","endLine":137,"endColumn":16,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'itemsData' and 'saveList'. Either include them or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [itemsData, listName, saveList]",{"range":"60","text":"61"},[3856,3866],"[itemsData, listName, saveList]"]