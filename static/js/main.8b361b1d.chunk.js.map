{"version":3,"sources":["item.js","AllContext.js","modal.js","selectList.js","menu.js","App.js","index.js"],"names":["Item","item","handler","useContext","AllContext","ItemButton","type","icon","className","completed","onClick","e","id","name","React","createContext","AllContextProvider","props","listArray","JSON","parse","localStorage","getItem","data","length","useState","itemsData","setItemsData","newInput","setNewInput","edit","setEdit","editItem","setEditItem","menuHide","setMenuHide","modalHide","setModalHide","selectListHide","setSelectListHide","listName","setListName","list","setList","loadedList","setLoadedList","toggleModal","prev","editDataProperty","property","trgt","newData","map","elm","deleteList","value","removeItem","filter","setItem","stringify","saveList","x","includes","window","alert","useEffect","LoadList","key","saveEdit","addItem","preventDefault","editable","nameList","prompt","toggleMenu","renameList","newName","currentTarget","Provider","children","Modal","onChange","event","target","SelectList","selected","setValue","setSelectorToDefault","onSubmitHandler","split","Menu","setSelected","handleMenuClick","clear","MenuButton","disabled","App","inputRef","useRef","onSubmit","current","focus","required","ref","placeholder","style","color","fontSize","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b361b1d.chunk.js","sourcesContent":["import React, {useContext} from \"react\"\r\nimport { AllContext} from \"./AllContext\"\r\nimport { FaRegSquare, FaRegCheckSquare, FaRegTrashAlt, FaRegEdit } from 'react-icons/fa';\r\n\r\nfunction Item({item}) {\r\n  const {handler} = useContext(AllContext)\r\n  \r\n  const ItemButton = ({type, icon}) => {\r\n    return (\r\n      <button\r\n        className={type === \"label\" ? `label ${item.completed && \"completed\"}` : 'item-button'}\r\n        onClick={(e) => handler(type)(e)}\r\n        id={item.id}\r\n        name={item.name}\r\n      >\r\n      {icon}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='item'>\r\n      <ItemButton type=\"delete\" icon={<FaRegTrashAlt />} />\r\n      <ItemButton type=\"edit\" icon={<FaRegEdit />} />\r\n      <ItemButton type=\"check\" icon={item.completed ? <FaRegCheckSquare /> : <FaRegSquare />} />\r\n      <ItemButton type=\"label\" icon={item.name}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item","import React, {useState, useEffect} from \"react\"\r\nimport Item from \"./item\"\r\n\r\nconst AllContext = React.createContext()\r\n\r\nfunction AllContextProvider(props) {\r\n  const listArray = JSON.parse(localStorage.getItem('listArray'))\r\n  const data = listArray && JSON.parse(localStorage.getItem(listArray[listArray.length - 1]))\r\n  const [itemsData, setItemsData] = useState(data ? data : [])\r\n  const [newInput, setNewInput] = useState(\"\")\r\n  const [edit, setEdit] = useState(\"\")\r\n  const [editItem, setEditItem] = useState(\"\")\r\n  const [menuHide, setMenuHide] = useState(true)\r\n  const [modalHide, setModalHide] = useState(true)\r\n  const [selectListHide, setSelectListHide] = useState(true)\r\n  const [listName, setListName] = useState(\"\")\r\n  const [list, setList] = useState(listArray ? listArray : [])\r\n  const [loadedList, setLoadedList] = useState(listArray ? listArray[listArray.length - 1] : \"My List\")\r\n\r\n  const toggleModal = () => setModalHide((prev) => !prev )\r\n  const toggleMenu = () => {\r\n    setMenuHide(prev => !prev )\r\n    !selectListHide && setSelectListHide(prev => !prev)\r\n  }\r\n  \r\n  const nameList = () => {\r\n    \r\n    setListName(prompt('Please give a name to your list.', `List-${list.length + 1}`))\r\n  }\r\n\r\n  function editDataProperty(property, trgt) {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === trgt) {\r\n        return {\r\n          ...elm,\r\n          [property]: !elm.[property]\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function LoadList() {\r\n    return (\r\n      <div className='list'>\r\n        {itemsData && itemsData.map(item => \r\n          <Item\r\n            key={item.id}\r\n            item={item}\r\n          />)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renameList(value) {\r\n    const newName = prompt('Rename your list.', value)\r\n    if (list.includes(newName)) {\r\n      window.alert(\"This list-name already exists.\")\r\n    } else if (newName !== null) {\r\n      setItemsData(JSON.parse(localStorage.getItem(value)))\r\n      setListName(newName)\r\n      loadedList === value && setLoadedList(newName)\r\n      deleteList(value)\r\n    }\r\n  }\r\n\r\n  function deleteList(value) {\r\n    localStorage.removeItem(value)\r\n    setList(prev => prev.filter(elm => elm !== value ))\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }\r\n  function saveList(x, e) { \r\n    if (x !== \"\" && !list.includes(x)) {\r\n      setList(prev => [...prev, x])\r\n      setListName(\"\")\r\n      setLoadedList(x)\r\n    } else {\r\n      window.alert(\"This list-name already exists.\")\r\n    }\r\n  }\r\n\r\n  function saveEdit() {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === editItem) {\r\n        return {\r\n          ...elm,\r\n          name: edit\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function handler(type) {\r\n    return function(e){\r\n      const trgt = e.currentTarget.id\r\n      if (type === \"edit\") {\r\n        toggleModal()\r\n        setEdit(e.currentTarget.name)\r\n        setEditItem(trgt)\r\n      } else if (type === \"check\" || type === \"label\") {\r\n          editDataProperty('completed', trgt)\r\n      } else if (type === \"delete\") {\r\n          setItemsData(itemsData.filter(item => item.id !== trgt))\r\n      }\r\n    }\r\n  }\r\n\r\n  function addItem(e){\r\n    e.preventDefault()\r\n    setItemsData(prev => prev && [...prev,\r\n      {\r\n      id: newInput + itemsData.length,\r\n      name: newInput,\r\n      completed: false,\r\n      editable: false,\r\n      }]\r\n    )\r\n    setNewInput(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (listName) {\r\n      saveList(listName)\r\n      localStorage.setItem(listName, JSON.stringify(itemsData))\r\n    }\r\n  }, [listName])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }, [list])\r\n\r\n  const value = {\r\n    toggleModal,\r\n    editDataProperty,\r\n    LoadList,\r\n    saveList,\r\n    saveEdit,\r\n    setItemsData,\r\n    addItem,\r\n    nameList,\r\n    setEdit,\r\n    edit,\r\n    menuHide,\r\n    toggleMenu,\r\n    newInput,\r\n    setNewInput,\r\n    itemsData,\r\n    list,\r\n    setList,\r\n    setEditItem,\r\n    modalHide,\r\n    setModalHide,\r\n    listName,\r\n    deleteList,\r\n    loadedList,\r\n    setLoadedList,\r\n    renameList,\r\n    selectListHide,\r\n    setSelectListHide,\r\n    handler\r\n  }\r\n\r\n  return (\r\n    <AllContext.Provider value={value}>\r\n      {props.children}\r\n    </AllContext.Provider>\r\n  )\r\n}\r\n\r\nexport {AllContext, AllContextProvider}","import React, { useContext} from \"react\"\r\nimport { AllContext} from \"./AllContext\"\r\n\r\nfunction Modal() {\r\n  const {setEdit, saveEdit, edit, modalHide, toggleModal} = useContext(AllContext)\r\n  return (\r\n    <div className={modalHide ? \"modal-hide\" : \"modal\"}>\r\n      <form className=\"modal-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={edit}\r\n          className=\"item-input\"\r\n          onChange={event => {\r\n            setEdit (event.target.value)\r\n          }}\r\n        />\r\n        <div className=\"modal-container-buttons\">\r\n          <input   \r\n            type=\"button\"\r\n            value=\"Save\"\r\n            onClick={() => {\r\n              toggleModal()\r\n              saveEdit()\r\n              }}\r\n            className=\"modal-btns\"\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className=\"modal-btns\"\r\n            onClick={toggleModal} \r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, { useContext, useState } from \"react\"\r\nimport { AllContext } from \"./AllContext\"\r\nimport { FaRegWindowClose } from 'react-icons/fa'\r\n\r\nfunction SelectList({list, selectListHide, setSelectListHide, selected}) {\r\n  const { setItemsData, deleteList, setLoadedList, renameList } = useContext(AllContext)\r\n  const [value, setValue] = useState(\"\")\r\n  const onChangeHandler = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  const setSelectorToDefault = () => {\r\n    setSelectListHide(prev => !prev)\r\n    setValue(\"\")\r\n  }\r\n  \r\n  const onSubmitHandler = () => {\r\n    switch (selected) {\r\n      case \"Load a List\":\r\n        setItemsData(JSON.parse(localStorage.getItem(value)))\r\n        setLoadedList(value)\r\n        setSelectorToDefault()\r\n        break;\r\n      case \"Rename a List\":\r\n        renameList(value)\r\n        setSelectorToDefault()\r\n        break;\r\n      case \"Delete a List\":\r\n        deleteList(value)\r\n        setSelectorToDefault()\r\n        break;\r\n      default:\r\n        setSelectorToDefault()\r\n    }\r\n  }\r\n\r\n  const yesNo = () => \r\n    <>\r\n      <p>{selected.split(\" \")[0]} \"<span>{value}</span>\"?</p>\r\n      <div className=\"modal-container-buttons\">\r\n        <input   \r\n          type=\"button\"\r\n          value=\"YES\"\r\n          onClick={onSubmitHandler}\r\n          className=\"modal-btns\"\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"NO\"\r\n          className=\"modal-btns\"\r\n          onClick={() => setSelectorToDefault()}\r\n        />\r\n      </div>\r\n    </>\r\n  \r\n\r\n  return (\r\n    <div className={selectListHide ? \"modal-hide\" : \"modal selectList\"}>\r\n      <FaRegWindowClose \r\n        onClick={setSelectorToDefault}\r\n        className=\"modal-btns select-close-btn\"\r\n      />\r\n      <form className=\"modal-container\">        \r\n        {` Select a List to ${selected.split(\" \")[0]} `}\r\n        <label>\r\n          <select\r\n            id=\"mySelector\"\r\n            onChange={onChangeHandler}\r\n            value={'DEFAULT'}\r\n          >\r\n            <option value=\"DEFAULT\">...</option>\r\n            {list && list.map(elm =>\r\n              <option value={elm}>{elm}</option>\r\n            )}\r\n          </select>\r\n        </label>\r\n        {value && yesNo()}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectList","import React, {useState, useContext} from \"react\"\r\nimport SelectList from \"./selectList\"\r\nimport { AllContext } from \"./AllContext\"\r\n\r\nfunction Menu() {\r\n  const [selected, setSelected] = useState(\"\")\r\n  const { menuHide, nameList, setList, list, setItemsData, itemsData, selectListHide, setSelectListHide, setLoadedList} = useContext(AllContext)\r\n  \r\n  const deleteAllData = () => {\r\n    localStorage.clear()\r\n    setList([])\r\n    setItemsData([])\r\n  }\r\n  const handleMenuClick = (e) => {\r\n    setSelected(e.target.name)\r\n    switch (e.target.name) {\r\n      case \"Save\":\r\n        nameList()\r\n        break;\r\n      case \"Clean All Data\":\r\n        deleteAllData()\r\n        setLoadedList(\"\")\r\n        break;\r\n      default:\r\n        setSelectListHide(prev => !prev)\r\n    }\r\n  }\r\n\r\n  function MenuButton({name}){\r\n    return (\r\n      <button\r\n      disabled={list.length === 0 ? true : false}\r\n      name={name}\r\n      className=\"modal-btns menu-btns\"\r\n      onClick={handleMenuClick}\r\n      >\r\n        {name}\r\n      </button>\r\n    )\r\n  }\r\n  return (\r\n    <div className={menuHide ? \"modal__menu hide\" : \"modal__menu\"}>\r\n      <div className=\"menu-container-buttons\">\r\n        <button\r\n          disabled={itemsData.length === 0 ? true : false}\r\n          name=\"Save\"\r\n          className=\"modal-btns menu-btns\"\r\n          onClick={handleMenuClick}\r\n        >\r\n          Save List\r\n        </button>\r\n        <MenuButton name=\"Load a List\"/>\r\n        <MenuButton name=\"Delete a List\"/>\r\n        <MenuButton name=\"Rename a List\"/>\r\n        <MenuButton name=\"Clean All Data\"/>\r\n        <SelectList\r\n          selectListHide={selectListHide}\r\n          setSelectListHide={setSelectListHide}\r\n          list={list}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, {useContext, useRef} from 'react';\nimport Modal from \"./modal\"\nimport Menu from \"./menu\"\nimport { FaBars, FaWindowClose, FaRegSave } from 'react-icons/fa';\nimport { AllContext} from \"./AllContext\"\n\n\nfunction App() {\n  const {menuHide, toggleMenu, itemsData, addItem, newInput, setNewInput, LoadList, loadedList} = useContext(AllContext)\n  const inputRef = useRef(null)\n  return (\n    <div className=\"main\">\n      <div className=\"header-container\">\n        <h2 className=\"header\"> MY LIST</h2>\n        <Menu />\n        <button\n          className={!menuHide ? \"menu menu-btns modal-btns\" : \"menu\"}\n          onClick={toggleMenu}\n        >\n          {menuHide ? <FaBars /> : <FaWindowClose />}\n        </button>\n      </div>\n      <div className='container'>        \n        <Modal />\n        <div className=\"form\">\n          <form onSubmit={(e) => {\n            addItem(e)\n            inputRef.current.focus()\n            }}>\n            <input\n              className=\"item-input\"\n              type=\"text\" required\n              ref={inputRef}\n              name=\"item\"\n              value={newInput}\n              onChange={event => {\n                setNewInput(event.target.value)\n              }}\n              placeholder=\"e.g. Milk\"\n            />\n            <button className=\"submit-btn\" type='submit'>Add</button>\n          </form>\n          <div className=\"list-header-container\">\n            <h3 className=\"header\">{loadedList}</h3>\n            <FaRegSave\n              onClick={() => localStorage.setItem(loadedList, JSON.stringify(itemsData))}\n              style={{color: \"teal\", fontSize: \"1rem\", cursor: \"pointer\"}}\n            />\n          </div>\n          <LoadList />\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AllContextProvider } from \"./AllContext\"\n\nReactDOM.render(\n  <AllContextProvider>\n    <App />\n  </AllContextProvider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}