{"version":3,"sources":["item.js","AllContext.js","modal.js","menu.js","header.js","tabs.js","listHeader.js","form.js","App.js","index.js"],"names":["Item","item","handler","useContext","AllContext","ItemButton","type","icon","className","completed","onClick","e","id","name","React","createContext","AllContextProvider","props","listArray","JSON","parse","localStorage","getItem","data","length","useState","activeTab","setActiveTab","itemsData","setItemsData","newInput","setNewInput","edit","setEdit","editItem","setEditItem","menuHide","setMenuHide","modalHide","setModalHide","listName","setListName","list","setList","loadedList","setLoadedList","toggleModal","prev","editDataProperty","property","trgt","newData","map","elm","deleteList","value","removeItem","filter","setItem","stringify","saveList","x","includes","window","alert","useEffect","LoadList","key","saveEdit","addItem","preventDefault","editable","nameList","prompt","toggleMenu","renameList","newName","currentTarget","Provider","children","Modal","onChange","event","target","Menu","selected","setSelected","handleClick","clear","OptionsTabs","MenuButton","ListOfLists","Header","Tabs","Tab","style","transform","ListHeader","color","fontSize","cursor","margin","Form","inputRef","useRef","onSubmit","current","focus","required","ref","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1892b74b.chunk.js","sourcesContent":["import React, {useContext} from \"react\"\r\nimport { AllContext} from \"./AllContext\"\r\nimport { FaRegSquare, FaRegCheckSquare, FaRegTrashAlt, FaRegEdit } from 'react-icons/fa';\r\n\r\nfunction Item({item}) {\r\n  const {handler} = useContext(AllContext)\r\n  \r\n  const ItemButton = ({type, icon}) => {\r\n    return (\r\n      <button\r\n        className={type === \"label\" ? `label ${item.completed && \"completed\"}` : 'item-button'}\r\n        onClick={(e) => handler(type)(e)}\r\n        id={item.id}\r\n        name={item.name}\r\n      >\r\n      {icon}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='item'>\r\n      <ItemButton type=\"delete\" icon={<FaRegTrashAlt />} />\r\n      <ItemButton type=\"edit\" icon={<FaRegEdit />} />\r\n      <ItemButton type=\"check\" icon={item.completed ? <FaRegCheckSquare /> : <FaRegSquare />} />\r\n      <ItemButton type=\"label\" icon={item.name}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item","import React, {useState, useEffect} from \"react\"\r\nimport Item from \"./item\"\r\n\r\nconst AllContext = React.createContext()\r\n\r\nfunction AllContextProvider(props) {\r\n  const listArray = JSON.parse(localStorage.getItem('listArray'))\r\n  const data = listArray && JSON.parse(localStorage.getItem(listArray[listArray.length - 1]))\r\n  const [activeTab, setActiveTab] = useState(null)\r\n  const [itemsData, setItemsData] = useState(data ? data : [])\r\n  const [newInput, setNewInput] = useState(\"\")\r\n  const [edit, setEdit] = useState(\"\")\r\n  const [editItem, setEditItem] = useState(\"\")\r\n  const [menuHide, setMenuHide] = useState(true)\r\n  const [modalHide, setModalHide] = useState(true)\r\n  const [listName, setListName] = useState(\"\")\r\n  const [list, setList] = useState(listArray ? listArray : [])\r\n  const [loadedList, setLoadedList] = useState(listArray ? listArray[listArray.length - 1] : \"My List\")\r\n\r\n  const toggleModal = () => setModalHide((prev) => !prev )\r\n  const toggleMenu = () => {\r\n    setMenuHide(prev => !prev )\r\n  }\r\n  \r\n  const nameList = () => {\r\n    setListName(prompt('Please give a name to your list.', `List-${list.length + 1}`))\r\n  }\r\n\r\n  function editDataProperty(property, trgt) {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === trgt) {\r\n        return {\r\n          ...elm,\r\n          [property]: !elm.[property]\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function LoadList() {\r\n    return (\r\n      activeTab === null ? \r\n      <div className='list'>\r\n        {itemsData && itemsData.map(item => \r\n          <Item\r\n            key={item.id}\r\n            item={item}\r\n          />)\r\n        }\r\n      </div> :\r\n      <div className='list'>\r\n        {\r\n          itemsData && itemsData.filter(elm => elm.completed === activeTab).map(item => \r\n          <Item\r\n            key={item.id}\r\n            item={item}\r\n          />)\r\n        }\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  function renameList(value) {\r\n    const newName = prompt('Rename your list.', value)\r\n    if (list.includes(newName)) {\r\n      window.alert(\"This list-name already exists.\")\r\n    } else if (newName !== null) {\r\n      setItemsData(JSON.parse(localStorage.getItem(value)))\r\n      setListName(newName)\r\n      loadedList === value && setLoadedList(newName)\r\n      deleteList(value)\r\n    }\r\n  }\r\n\r\n  function deleteList(value) {\r\n    localStorage.removeItem(value)\r\n    setList(prev => prev.filter(elm => elm !== value ))\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }\r\n  function saveList(x, e) { \r\n    if (x !== \"\" && !list.includes(x)) {\r\n      setList(prev => [...prev, x])\r\n      setListName(\"\")\r\n      setLoadedList(x)\r\n    } else {\r\n      window.alert(\"This list-name already exists.\")\r\n    }\r\n  }\r\n\r\n  function saveEdit() {\r\n    const newData = itemsData.map(elm => {\r\n      if (elm.id === editItem) {\r\n        return {\r\n          ...elm,\r\n          name: edit\r\n        }\r\n      } else { return elm}\r\n    })\r\n    setItemsData(newData)\r\n  }\r\n\r\n  function handler(type) {\r\n    return function(e){\r\n      const trgt = e.currentTarget.id\r\n      if (type === \"edit\") {\r\n        toggleModal()\r\n        setEdit(e.currentTarget.name)\r\n        setEditItem(trgt)\r\n      } else if (type === \"check\" || type === \"label\") {\r\n          editDataProperty('completed', trgt)\r\n      } else if (type === \"delete\") {\r\n          setItemsData(itemsData.filter(item => item.id !== trgt))\r\n      }\r\n    }\r\n  }\r\n\r\n  function addItem(e){\r\n    e.preventDefault()\r\n    setItemsData(prev => prev && [...prev,\r\n      {\r\n      id: newInput + itemsData.length,\r\n      name: newInput,\r\n      completed: false,\r\n      editable: false,\r\n      }]\r\n    )\r\n    setNewInput(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (listName) {\r\n      saveList(listName)\r\n      localStorage.setItem(listName, JSON.stringify(itemsData))\r\n    }\r\n  }, [listName])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listArray', JSON.stringify(list))\r\n  }, [list])\r\n\r\n  const value = {\r\n    toggleModal,\r\n    editDataProperty,\r\n    LoadList,\r\n    saveList,\r\n    saveEdit,\r\n    setItemsData,\r\n    addItem,\r\n    nameList,\r\n    setEdit,\r\n    edit,\r\n    menuHide,\r\n    toggleMenu,\r\n    newInput,\r\n    setNewInput,\r\n    itemsData,\r\n    list,\r\n    setList,\r\n    setEditItem,\r\n    modalHide,\r\n    setModalHide,\r\n    listName,\r\n    deleteList,\r\n    loadedList,\r\n    setLoadedList,\r\n    renameList,\r\n    handler,\r\n    setActiveTab,\r\n    activeTab\r\n  }\r\n\r\n  return (\r\n    <AllContext.Provider value={value}>\r\n      {props.children}\r\n    </AllContext.Provider>\r\n  )\r\n}\r\n\r\nexport {AllContext, AllContextProvider}","import React, { useContext} from \"react\"\r\nimport { AllContext} from \"./AllContext\"\r\n\r\nfunction Modal() {\r\n  const {setEdit, saveEdit, edit, modalHide, toggleModal} = useContext(AllContext)\r\n  return (\r\n    <div className={modalHide ? \"modal-hide\" : \"modal\"}>\r\n      <form className=\"modal-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={edit}\r\n          className=\"item-input\"\r\n          onChange={event => {\r\n            setEdit (event.target.value)\r\n          }}\r\n        />\r\n        <div className=\"modal-container-buttons\">\r\n          <input   \r\n            type=\"button\"\r\n            value=\"Save\"\r\n            onClick={() => {\r\n              toggleModal()\r\n              saveEdit()\r\n              }}\r\n            className=\"modal-btns\"\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className=\"modal-btns\"\r\n            onClick={toggleModal} \r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, {useState, useContext} from \"react\"\r\nimport { AllContext } from \"./AllContext\"\r\n\r\nfunction Menu() {\r\n  const [selected, setSelected] = useState(\"\")\r\n  const { menuHide, nameList, setList, list, setItemsData, setLoadedList, deleteList, renameList} = useContext(AllContext)\r\n  \r\n  const deleteAllData = () => {\r\n    localStorage.clear()\r\n    setList([])\r\n    setItemsData([])\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    switch (e.target.name) {\r\n      case \"load\":\r\n        setItemsData(JSON.parse(localStorage.getItem(selected)))\r\n        setLoadedList(selected)\r\n        setSelected(\"\")\r\n        break;\r\n      case \"rename\":\r\n        renameList(selected)\r\n        setSelected(\"\")\r\n        break;\r\n      case \"delete\":\r\n        deleteList(selected)\r\n        setSelected(\"\")\r\n        break;\r\n      case \"Save\":\r\n        setSelected(\"\")\r\n        nameList()\r\n        break;\r\n      case \"Clean All Data\":\r\n        setSelected(\"\")\r\n        deleteAllData()\r\n        setLoadedList(\"\")\r\n        break;\r\n      default:\r\n        setSelected(e.target.name)\r\n    }\r\n  }\r\n\r\n  function OptionsTabs() {\r\n    return (\r\n      <div className=\"menu-tabs\">\r\n        {\r\n          [\"load\", \"rename\", \"delete\"].map(elm =>\r\n          <button \r\n            className=\"menu-tab\"\r\n            name={elm}\r\n            onClick={handleClick}>{elm}\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  // const yesNo = () => \r\n  // <>\r\n  //   <p>{selected.split(\" \")[0]} \"<span>Are you sure?</span>\"?</p>\r\n  //   <div className=\"modal-container-buttons\">\r\n  //     <input   \r\n  //       type=\"button\"\r\n  //       value=\"YES\"\r\n  //       onClick={handleClick}\r\n  //       className=\"modal-btns\"\r\n  //     />\r\n  //     <input\r\n  //       type=\"button\"\r\n  //       value=\"NO\"\r\n  //       className=\"modal-btns\"\r\n  //       onClick={() => console.log(\"done!\")}\r\n  //     />\r\n  //   </div>\r\n  // </>\r\n\r\n  function MenuButton({name}){\r\n    return (\r\n      <button\r\n        name={name}\r\n        className=\"modal-btns menu-btns\"\r\n        onClick={handleClick}\r\n      >\r\n        {name}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const ListOfLists = () => list.map(elm => \r\n            <div className={selected === elm ? \"menu-tab-opened\" : \"\"}>\r\n              <MenuButton name={elm} />\r\n              {selected === elm && <OptionsTabs />}\r\n            </div>\r\n          )\r\n\r\n  return (\r\n    <div className={menuHide ? \"modal__menu hide\" : \"modal__menu\"}>\r\n      <div className=\"menu-container-buttons\">\r\n          <MenuButton name=\"Save\" />\r\n          <MenuButton name=\"Clean All Data\" />\r\n          <ListOfLists />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useContext } from \"react\"\r\nimport Menu from \"./menu\"\r\nimport { FaBars, FaWindowClose } from 'react-icons/fa';\r\nimport { AllContext } from \"./AllContext\"\r\n\r\nconst Header = () => {\r\n  const {menuHide, toggleMenu} = useContext(AllContext)\r\n  return ( \r\n    <div className=\"header-container\">\r\n        <Menu />\r\n        <h2 className=\"header\"> MY LIST</h2>\r\n        <button\r\n          className={!menuHide ? \"menu menu-btns modal-btns\" : \"menu\"}\r\n          onClick={toggleMenu}\r\n        >\r\n          {menuHide ? <FaBars /> : <FaWindowClose className=\"menu-close\" />}\r\n        </button>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default Header;","import React,{ useContext} from \"react\"\r\nimport { AllContext } from \"./AllContext\"\r\n\r\nexport default function Tabs () {\r\n   const {setActiveTab, activeTab} = useContext(AllContext)\r\n   const Tab = ({value, name}) => <button className=\"tab\" onClick={() => setActiveTab(value)}>{name}</button>\r\n  return (\r\n    <div className=\"tabs\">\r\n      <Tab value={true} name=\"completed\" />\r\n      <Tab value={null} name=\"all\" />\r\n      <Tab value={false} name=\"incomplete\" />\r\n      <div \r\n        className=\"slider\" \r\n        style={{transform: `translateX(${activeTab === null ? 0 : activeTab ? -158 : 158}%)`}}\r\n      >\r\n      </div>\r\n    </div>\r\n      \r\n  )\r\n}","import React from \"react\"\r\nimport { FaRegSave } from 'react-icons/fa';\r\n\r\nconst ListHeader = ({loadedList, itemsData}) => {\r\n  return ( \r\n    <div className=\"list-header-container\">\r\n        <h3 className=\"header\">{loadedList}</h3>\r\n        <FaRegSave\r\n          onClick={() => localStorage.setItem(loadedList, JSON.stringify(itemsData))}\r\n          style={{color: \"#5f5f99\", fontSize: \"1.4rem\", cursor: \"pointer\", margin: \"0.4em\"}}\r\n        />\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default ListHeader;","import React, { useContext, useRef } from \"react\"\r\nimport { AllContext } from \"./AllContext\"\r\nimport Tabs from \"./tabs\"\r\nimport ListHeader from \"./listHeader\"\r\n\r\nconst Form = () => {\r\n  const { itemsData, addItem, newInput, setNewInput, LoadList, loadedList } = useContext(AllContext)\r\n  const inputRef = useRef(null)\r\n  return ( \r\n    <div className=\"form\">\r\n      <form onSubmit={(e) => {\r\n        addItem(e)\r\n        inputRef.current.focus()\r\n        }}>\r\n        <input\r\n          className=\"item-input\"\r\n          type=\"text\" required\r\n          ref={inputRef}\r\n          name=\"item\"\r\n          value={newInput}\r\n          onChange={event => {\r\n            setNewInput(event.target.value)\r\n          }}\r\n          placeholder=\"e.g. Milk\"\r\n        />\r\n        <button className=\"submit-btn\" type='submit'>Add</button>\r\n      </form>\r\n      <ListHeader \r\n        itemsData={itemsData}\r\n        loadedList={loadedList}\r\n      />\r\n      <Tabs />\r\n      <LoadList />\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Form;","import React from 'react';\nimport Modal from \"./modal\"\nimport Header from \"./header\"\nimport Form from \"./form\"\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <Header />\n      <div className='container'>        \n        <Modal />\n        <Form />\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AllContextProvider } from \"./AllContext\"\n\nReactDOM.render(\n  <AllContextProvider>\n    <App />\n  </AllContextProvider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}